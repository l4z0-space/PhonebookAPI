{"version":3,"sources":["components/Filter.js","components/ContactForm.js","components/Contact.js","components/Contacts.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","id","value","newFilter","onChange","handleFilter","ContactForm","onSubmit","addContact","newName","handleName","newNumber","handleNumber","type","Contact","person","deleteContact","name","number","onClick","Contacts","persons","filter","toLowerCase","includes","map","key","baseUrl","axios","get","then","response","data","newContact","post","delete","put","Notification","error","message","style","padding","backgroundColor","color","marginBottom","borderRadius","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","setError","hook","ConService","allPersons","catch","console","log","useEffect","handleChange","target","handleClick","preventDefault","newPerson","prop","JSON","stringify","exists","window","confirm","oldPerson","find","updatedPerson","setTimeout","returnedPerson","concat","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f1cfe6b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n  \n    return (\n    <div id='searchDiv'>\n    Search<input value={props.newFilter} onChange={props.handleFilter}/>\n    </div>\n    ) \n  }\n\nexport default Filter\n","import React from 'react'\n\nconst ContactForm = (props) => {\n  \n    return (\n    \n    <form id='addForm'onSubmit={props.addContact}>\n      <div>\n        Name<input value={props.newName} onChange={props.handleName}/>\n        <br/>\n        Number<input value={props.newNumber} onChange={props.handleNumber}/>\n      </div>\n      <div>\n        <button id=\"addButton\" type=\"submit\" >ADD</button>\n      </div>\n    </form>\n    \n    ) \n  }\n\nexport default ContactForm\n","import React from 'react'\n\nconst Contact = ({person, deleteContact}) => {\n    \n    return <li> <b>{person.name} </b>{person.number} <button id=\"deleteButton\" onClick={()=>deleteContact(person.id)} >delete</button></li>\n     \n}\n\nexport default Contact","import React from 'react'\nimport Contact from './Contact'\n\nconst Contacts = ({persons, newFilter, deleteContact}) => {\n  \n    return (\n        <div id='contactList'>\n            { /* Filter then map to the Contact */ \n            persons\n            .filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()) )\n            .map(person => <Contact deleteContact={deleteContact} key={person.id} person={person} />)\n            }\n        </div>\n    )\n}\n\nexport default Contacts","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () =>{\n    const request = axios.get(baseUrl)\n    return request\n                .then(response => response.data)\n}\n\nconst createContact = (newContact) => {\n    const request = axios.post(baseUrl, newContact)    \n    return request\n                .then(response => response.data)\n}\n\nconst deleteContact = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request\n                .then(response => response.data)            \n}\n\nconst updateContact = (id, newContact) => {\n    const request = axios.put(`${baseUrl}/${id}`, newContact)\n    return request\n                .then(response => response.data)\n}\n\nexport default{\n    getAll, createContact, deleteContact, updateContact\n}","import React from 'react'\n\nconst Notification = ({error, message}) => {\n\n    const successStyle = {\n        padding: '20px',\n        backgroundColor: 'green',\n        color: 'white',\n        marginBottom: '15px',\n        borderRadius: '10%'\n    }\n\n    const errorStyle = {\n        padding: '20px',\n        backgroundColor: 'red',\n        color: 'white',\n        marginBottom: '15px',\n        borderRadius: '10%'\n    }\n\n    if (message === null){\n        return null\n    }\n    return (\n        <div style={error ? errorStyle : successStyle} className='message'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport ContactForm from './components/ContactForm'\nimport Contacts from './components/Contacts'\nimport ConService from './services/contacts'\nimport Notification from './components/Notification'\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ error, setError ] = useState(true)\n  \n  const hook = () => {\n    ConService\n      .getAll()\n      .then(allPersons => {\n        setPersons(allPersons)\n      })\n      .catch(error => console.log('error'))\n  }\n  useEffect(hook, [])\n  /* Checks if contact already exists */\n  const exists = (prop) => {\n    for (const person of persons){\n      if(JSON.stringify(person.name) === JSON.stringify(prop.name))\n        return true;\n    }\n  }\n\n  /* Add a new contact  */\n  const addContact = (handleClick) => {\n    handleClick.preventDefault();\n    const newPerson = { name: newName, number: newNumber}\n\n    if (!exists(newPerson)){\n      ConService\n        .createContact(newPerson)\n        .then(returnedPerson => {\n          setMessage(`${returnedPerson.name} was added.`)\n          setError(false)\n          setTimeout(() => {\n            setMessage(null)\n          },5000)\n          setPersons(persons.concat(returnedPerson))}\n        )\n        .catch(error => console.log(error))\n    }\n    \n    else {\n      const confirm =\n        window.confirm(`${newPerson.name} is already in contact list. Replace the old number with a new one?`) \n      if(confirm){\n        const oldPerson = persons.find(person => person.name === newPerson.name)\n        ConService\n                .updateContact(oldPerson.id, newPerson)\n                .then(updatedPerson => {\n                  console.log('newPerson: ', updatedPerson);\n                  hook() // render again\n                })\n                .catch(error => {\n                  setPersons(persons.filter(person => person.id !== oldPerson.id))\n                  setMessage(`Contact doesn't exist`)\n                  setError(true)\n                  setTimeout(()=>{\n                    setMessage(null)\n                  },4000)\n                })\n      }\n    }\n  }\n\n  const handleName = (handleChange) => {\n    setNewName(handleChange.target.value)\n  }\n\n  const handleNumber = (handleChange) => {\n    setNewNumber(handleChange.target.value)\n  }\n\n  const handleFilter = (handleChange) => {\n    setNewFilter(handleChange.target.value)\n  }\n\n  const deleteContact = (id) =>{\n    const toDelete = window.confirm(`Delete ${persons.filter(person => person.id ===id).map(p => p.name)}`)\n \n    if (toDelete){\n      ConService\n        .deleteContact(id)\n        .then(deleteContact => {\n          setMessage(`Contact deleted.`)\n          setError(false)\n          setTimeout(()=>{\n            setMessage(null)\n          },3000)\n\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }                 \n\n  return (\n    <div id='mainDiv'>\n      <h1>Phonebook</h1>\n      <Notification error={error} message = {message}/>\n      <Filter newFilter={newFilter} handleFilter={handleFilter}/>\n      <h2>Add contact</h2>\n      <ContactForm addContact={addContact} newName={newName} newNumber={newNumber} handleName={handleName} handleNumber={handleNumber} />\n      <h2>Numbers</h2>\n      <Contacts deleteContact={deleteContact} persons={persons} newFilter = {newFilter} />\n    </div>\n  )\n}\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}